name: Akka Strem Perf Spec

on:
  # schedule:
  #   - cron: "0 0 * * *"
  push:

concurrency:
  # Only run once for latest commit per ref and cancel other (previous) runs.
  group: akka-stream-perf-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: self-hosted
    if: github.repository == 'akka/akka'
    strategy:
      matrix:
          command:
            - "'akka-bench-jmh/jmh:runMain akka.BenchRunner full -rf csv -rff GraphBuilderBenchmark.csv -p complexity=10 akka.stream.GraphBuilderBenchmark'"
            - "'akka-bench-jmh/jmh:runMain akka.BenchRunner full -rf csv -rff MaterializationBenchmark.csv -p complexity=10 akka.stream.MaterializationBenchmark'"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11

      - name: Cache Coursier cache
        uses: coursier/cache-action@v6.2

      - name: Run Performance tests
        run: |
          sbt -jvm-opts .jvmopts-ci \
            -Dakka.ci-server=true \
            -XX:+UseParallelGC \
            -XX:+UseParallelOldGC \
            -Xms2g \
            -Xmx2g \
            -XX:-UseBiasedLocking \
            -XX:+UseCompressedOops \
            -XX:+PrintGCDetails \
            -XX:+PrintGCTimeStamps \
            -XX:MetaspaceSize=512M \
            -Xss2m \
            -XX:ReservedCodeCacheSize=256m \
            -Djava.security.egd=file:/dev/./urandom \
            -Dakka.test.timefactor=1 \
            ${{ matrix.command }}

      - name: 'Store produced csv files'
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: benchmark-results ${{ matrix.command }}
          path: akka-bench-jmh/*.csv
          if-no-files-found: error
